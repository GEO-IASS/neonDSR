function [] = CreateKML( inputImageStruct, kmlFileName)

% [] = CreateKML( inputImageStruct, kmlFileName)
%write KML file from scored image
%inputs:
%inputImageStruct:  image struct that has been scored and contains ROCKY
%cell array (struct)
%kmlFileName:  filename to save KML text to, include path if not using current directory (text)
%
%
%outputs: None

halo = inputImageStruct.info.description{end}.CreateAlarmsParameters.Halo;

fid = fopen(kmlFileName, 'wt');
header='<kml xmlns="http://earth.google.com/kml/2.0"><Document><name>MUUFL-Gulfport Truth/Alarm Locations</name><Folder><name>Detected Target Locations</name>';
footer='</Document>';
fprintf(fid, '%s ',header);
alarmPixelLocations = zeros(size(inputImageStruct,1),2);
for i=1:size(inputImageStruct.ROCKY,1)
    alarmPixelLocations(i,:) = [inputImageStruct.ROCKY{i,5}, inputImageStruct.ROCKY{i,6}];
end

%write truth locations
tempStr = '<Folder><name>Missed Targets Locations</name>';
for i=1:numel(inputImageStruct.groundTruth.Targets_UTMx)
    
    if inputImageStruct.groundTruth.Targets_Elevated(i) == 1
        elevatedStr = 'Yes';
    else
        elevatedStr = 'No';
    end
    
    [k,d] = dsearchn(alarmPixelLocations, [inputImageStruct.groundTruth.Targets_rowIndices(i), inputImageStruct.groundTruth.Targets_colIndices(i)]);
    
    if min(d) < halo
    strTag1=['<Placemark>',...
        '<Style><IconStyle><Icon> ',...
        '<href>http://maps.google.com/mapfiles/kml/pushpin/red-pushpin.png</href>',...
        '</Icon></IconStyle></Style> ',...
        '<name>',inputImageStruct.groundTruth.Targets_ID{i},'</name>',...
        '<description>',...
        'Target Name:  ', inputImageStruct.groundTruth.Targets_ID{i},...
        '<br/> Color:  ', inputImageStruct.groundTruth.Targets_Type{i}, ...
        '<br/> Size:  ', num2str(inputImageStruct.groundTruth.Targets_Size(i)), ' meters',...
        '<br/> Elevated:  ', elevatedStr,...
        '</description>',...
        '<Point>',...
        '<coordinates>'];
    fprintf(fid, '%s', strTag1);
    
    fprintf(fid, '%.6f, %.6f, 0.0', inputImageStruct.groundTruth.Targets_Lon(i), inputImageStruct.groundTruth.Targets_Lat(i));
    strTag2='</coordinates></Point></Placemark>';
    fprintf(fid, '%s', strTag2);
    else
        strTag1=['<Placemark>',...
        '<Style><IconStyle><Icon> ',...
        '<href>http://maps.google.com/mapfiles/kml/pushpin/wht-pushpin.png</href>',...
        '</Icon></IconStyle></Style> ',...
        '<name>',inputImageStruct.groundTruth.Targets_ID{i},'</name>',...
        '<description>',...
        'Target Name:  ', inputImageStruct.groundTruth.Targets_ID{i},...
        '<br/> Color:  ', inputImageStruct.groundTruth.Targets_Type{i}, ...
        '<br/> Size:  ', num2str(inputImageStruct.groundTruth.Targets_Size(i)), ' meters',...
        '<br/> Elevated:  ', elevatedStr,...
        '</description>',...
        '<Point>',...
        '<coordinates>'];
    s= sprintf('%.6f, %.6f, 0.0', inputImageStruct.groundTruth.Targets_Lon(i), inputImageStruct.groundTruth.Targets_Lat(i));
    tempStr = [tempStr, strTag1, s,'</coordinates></Point></Placemark>'];
   
    end
end
% fprintf(fid, '%s', footer);
%
% header2='<Document><name>MUUFL-Gulfport Alarm Locations</name>';
fprintf(fid, '</Folder>');
 fprintf(fid, '%s', tempStr);
fprintf(fid, '</Folder><Folder><name>False Alarm Locations</name>');
%write alarm locations
tempStr = '<Folder><name>Alarm Locations</name>';

for i=1:size(inputImageStruct.ROCKY,1)
    if strcmpi(inputImageStruct.ROCKY{i,4}, 'FA') || strcmpi(inputImageStruct.ROCKY{i,4}, 'False Alarm')
        strTag1=strcat('<Placemark>',...
            '<Style><IconStyle><Icon> ',...
            '<href>http://maps.google.com/mapfiles/kml/pushpin/grn-pushpin.png</href>',...
            '</Icon></IconStyle></Style> ',...
            '<name>Alarm_',num2str(i),'</name>',...
            '<description>',...
            'Target Name:  ', inputImageStruct.ROCKY{i,4},...
            '<br/> Pd:  ', num2str(inputImageStruct.ROCKY{i,2}), ...
            '<br/> FAR:  ', num2str(inputImageStruct.ROCKY{i,3}),...
            '<br/> Threshold:  ', num2str(inputImageStruct.ROCKY{i,1}),...
            '<br/> Human Assigned Conf:  ', num2str(inputImageStruct.ROCKY{i,7}),...
            '<br/> Human Assigned Shadow:  ', num2str(inputImageStruct.ROCKY{i,8}),...
            '</description>',...
            '<Point>',...
            '<coordinates>');
        

            
        fprintf(fid, '%s', strTag1);
        fprintf(fid, '%.6f, %.6f, 0.0', inputImageStruct.Lon(inputImageStruct.ROCKY{i,6}), inputImageStruct.Lat(inputImageStruct.ROCKY{i,5}));
        strTag2='</coordinates></Point></Placemark>';
        fprintf(fid, '%s', strTag2);
    else
        s=sprintf('%.6f, %.6f, 0.0', inputImageStruct.Lon(inputImageStruct.ROCKY{i,6}), inputImageStruct.Lat(inputImageStruct.ROCKY{i,5}));
        tempStr=strcat(tempStr, '<Placemark>',...
            '<Style><IconStyle><Icon> ',...
            '<href>http://maps.google.com/mapfiles/kml/pushpin/purple-pushpin.png</href>',...
            '</Icon></IconStyle></Style> ',...
            '<name>Alarm_',num2str(i),'</name>',...
            '<description>',...
            'Target Name:  ', inputImageStruct.ROCKY{i,4},...
            '<br/> Pd:  ', num2str(inputImageStruct.ROCKY{i,2}), ...
            '<br/> FAR:  ', num2str(inputImageStruct.ROCKY{i,3}),...
            '<br/> Threshold:  ', num2str(inputImageStruct.ROCKY{i,1}),...
            '<br/> Human Assigned Conf:  ', num2str(inputImageStruct.ROCKY{i,7}),...
            '<br/> Human Assigned Shadow:  ', num2str(inputImageStruct.ROCKY{i,8}),...
            '</description>',...
            '<Point>',...
            '<coordinates>', s, '</coordinates></Point></Placemark>');
        
    end
        
end
fprintf(fid, '</Folder>');
fprintf(fid, '%s', tempStr);
fprintf(fid, '</Folder>');
fprintf(fid, '%s', footer);
fprintf(fid, '</kml>');

fclose(fid);
end